{"version":3,"file":"static/js/172.450aef6f.chunk.js","mappings":"gOAMA,MAsDA,EAtDqBA,KACnB,MAAMC,GAAWC,EAAAA,EAAAA,MAwBjB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,QAAMG,UAAWC,EAAAA,EAAAA,SAAiBC,SAxBhBC,IACpBA,EAAEC,iBACF,MAAMC,EAAOF,EAAEG,OACTC,EAAOF,EAAKE,KAAKC,MACjBC,EAAWJ,EAAKI,SAASD,MACzBE,EAAQL,EAAKK,MAAMF,MAGzB,IADqBG,QAAQD,EAAME,MAAM,KAAK,IAAMF,EAAME,MAAM,KAAK,IAEnE,OAAOC,IAAAA,OAAAA,QAAwB,4BAEjCR,EAAKS,QAEL,MAAMC,EAAU,CACdR,OACAG,QACAD,YAGFd,GAASqB,EAAAA,EAAAA,IAAgBD,GAAS,EAK0BhB,SAAA,EACxDkB,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,OAAMnB,SAAC,UACtBkB,EAAAA,EAAAA,KAAA,SAAOE,KAAK,OAAOZ,KAAK,OAAOa,GAAG,OAAOC,UAAQ,EAACC,aAAa,SAC/DL,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,QAAOnB,SAAC,WACvBkB,EAAAA,EAAAA,KAAA,SACEE,KAAK,QACLT,MAAM,QACNU,GAAG,QACHC,UAAQ,EACRC,aAAa,SAEfL,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,WAAUnB,SAAC,cAC1BkB,EAAAA,EAAAA,KAAA,SACEE,KAAK,MACLZ,KAAK,WACLa,GAAG,WACHC,UAAQ,EACRC,aAAa,MACbC,UAAU,OAEZN,EAAAA,EAAAA,KAAA,UAAQE,KAAK,SAAQpB,SAAC,iBAExBkB,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAACC,GAAG,SAAQ1B,SAAC,YACjB,E,+BClDP,MAWA,EAXiB2B,KACf,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IAM/B,OAJAC,EAAAA,EAAAA,YAAU,KACRH,GAAcF,EAAS,IAAI,GAC1B,CAACE,EAAYF,KAETV,EAAAA,EAAAA,KAACvB,EAAY,GAAG,C,iCCbzB,SAAgB,SAAW,2B","sources":["components/Auth/RegisterForm.jsx","pages/Register/index.jsx","webpack://react-homework-template/./src/components/Auth/AuthForm.module.scss?4fca"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { userSignUpThunk } from 'store/auth/authSlice';\nimport styles from './AuthForm.module.scss';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const createContact = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.name.value;\n    const password = form.password.value;\n    const email = form.email.value;\n\n    const isValidEmail = Boolean(email.split('@')[1] && email.split('.')[1]);\n    if (!isValidEmail)\n      return Notiflix.Notify.failure('Incorrect Email address!');\n\n    form.reset();\n\n    const newUser = {\n      name,\n      email,\n      password,\n    };\n\n    dispatch(userSignUpThunk(newUser));\n  };\n\n  return (\n    <>\n      <form className={styles.authForm} onSubmit={createContact}>\n        <label htmlFor=\"name\">Name</label>\n        <input type=\"text\" name=\"name\" id=\"name\" required autoComplete=\"off\" />\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          email=\"email\"\n          id=\"email\"\n          required\n          autoComplete=\"off\"\n        />\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"tel\"\n          name=\"password\"\n          id=\"password\"\n          required\n          autoComplete=\"off\"\n          minLength=\"7\"\n        />\n        <button type=\"submit\">Register</button>\n      </form>\n      <Link to=\"/login\">Login</Link>\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/Auth/RegisterForm';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { selectIsLoggedIn } from 'store/selectors';\n\nconst Register = () => {\n  const navigate = useNavigate();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  useEffect(() => {\n    isLoggedIn && navigate('/');\n  }, [isLoggedIn, navigate]);\n\n  return <RegisterForm />;\n};\n\nexport default Register;\n","// extracted by mini-css-extract-plugin\nexport default {\"authForm\":\"AuthForm_authForm__ZOqFl\"};"],"names":["RegisterForm","dispatch","useDispatch","_jsxs","_Fragment","children","className","styles","onSubmit","e","preventDefault","form","target","name","value","password","email","Boolean","split","Notiflix","reset","newUser","userSignUpThunk","_jsx","htmlFor","type","id","required","autoComplete","minLength","Link","to","Register","navigate","useNavigate","isLoggedIn","useSelector","selectIsLoggedIn","useEffect"],"sourceRoot":""}