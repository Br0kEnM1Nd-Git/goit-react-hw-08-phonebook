{"version":3,"file":"static/js/470.990e86d5.chunk.js","mappings":"kMAGA,MAcA,EAdqBA,IAAwC,IAArCC,SAAS,GAAEC,EAAE,KAAEC,EAAI,OAAEC,IAAUJ,EACrD,MAAMK,GAAWC,EAAAA,EAAAA,MAGjB,OACEC,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CACGL,EAAK,KAAGC,MAEXK,EAAAA,EAAAA,KAAA,UAAQC,QAPUC,IAAMN,GAASO,EAAAA,EAAAA,IAAmBV,IAOrBM,SAAC,aAC7B,ECET,EAb2B,SAACK,GAAqC,IAApBC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACjD,GAAID,GAAUD,EAAgBG,OAAS,EAAG,CACxC,MAAME,EAAcL,EAAgBG,OAAS,EAE7C,OADuBH,EAAgBM,MAAMD,GACvBE,KAAInB,IACjBQ,EAAAA,EAAAA,KAACY,EAAY,CAACpB,QAASA,GAAcA,EAAQC,KAExD,CACA,OAAOW,EAAgBO,KAAInB,IAClBQ,EAAAA,EAAAA,KAACY,EAAY,CAACpB,QAASA,GAAcA,EAAQC,KAExD,ECHaoB,EAAgBtB,IAAyB,IAAxB,OAAEc,GAAS,GAAOd,EAC9C,MAAMa,GAAkBU,EAAAA,EAAAA,IAAYC,EAAAA,IAC9BC,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,IACrBC,GAAYJ,EAAAA,EAAAA,IAAYK,EAAAA,IACxBC,GAAQN,EAAAA,EAAAA,IAAYO,EAAAA,IAE1B,OACEvB,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAvB,SAAA,CACGM,IAAWW,IAAUhB,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBAC1BC,EAAAA,EAAAA,KAAA,MAAIuB,UAAWC,EAAAA,EAAAA,aAAoBzB,SAChCmB,GACClB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eACDqB,GACFpB,EAAAA,EAAAA,KAAA,KAAAD,SAAIqB,IACFhB,EAAgBG,OAClBS,EACES,EAAmBrB,GAEnBqB,EAAmBrB,EAAiBC,IAGtCL,EAAAA,EAAAA,KAAA,KAAAD,SAAG,yBAGN,C,oECjCP,QAA+B,oC,aCG/B,MA8BA,EA9BsB2B,KACpB,MAAM9B,GAAWC,EAAAA,EAAAA,MAkBjB,OACEC,EAAAA,EAAAA,MAAA,QAAMyB,UAAWC,EAAqBG,SAjBlBC,IACpBA,EAAEC,iBACF,MAAMC,EAAOF,EAAEG,OACTrC,EAAOoC,EAAKpC,KAAKsC,MACjBrC,EAASmC,EAAKnC,OAAOqC,MAE3BF,EAAKG,QAEL,MAAMC,EAAa,CACjBxC,OACAC,UAGFC,GAASuC,EAAAA,EAAAA,IAAgBD,GAAY,EAIyBnC,SAAA,EAC5DC,EAAAA,EAAAA,KAAA,SAAOoC,QAAQ,OAAMrC,SAAC,UACtBC,EAAAA,EAAAA,KAAA,SAAOqC,KAAK,OAAO3C,KAAK,OAAOD,GAAG,OAAO6C,UAAQ,EAACC,aAAa,UAC/DvC,EAAAA,EAAAA,KAAA,SAAOoC,QAAQ,SAAQrC,SAAC,YACxBC,EAAAA,EAAAA,KAAA,SAAOqC,KAAK,MAAM3C,KAAK,SAASD,GAAG,SAAS6C,UAAQ,EAACC,aAAa,SAClEvC,EAAAA,EAAAA,KAAA,UAAQqC,KAAK,SAAQtC,SAAC,kBACjB,E,sBC7BX,QAAgC,4BAAhC,EAA4E,4BAA5E,EAA4H,gC,sBCQ5H,MAwBA,EAxBayC,KACX,MAAMC,GAAa3B,EAAAA,EAAAA,IAAY4B,EAAAA,IACzB9C,GAAWC,EAAAA,EAAAA,MASjB,OAPA8C,EAAAA,EAAAA,YAAU,KACJF,IACF7C,GAASgD,EAAAA,EAAAA,GAAmB,KAC5BhD,GAASiD,EAAAA,EAAAA,OACX,GACC,CAACjD,EAAU6C,KAGZ3C,EAAAA,EAAAA,MAAA,OAAKyB,UAAWC,EAAqBzB,SAAA,EACnCD,EAAAA,EAAAA,MAAA,OAAKyB,UAAWC,EAAqBzB,SAAA,EACnCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBACJC,EAAAA,EAAAA,KAAC0B,EAAa,QAEhB1B,EAAAA,EAAAA,KAAA,OAAKuB,UAAWC,EAAyBzB,UACvCC,EAAAA,EAAAA,KAACa,EAAAA,EAAa,CAACR,QAAM,QAEnB,C,iCC5BV,SAAgB,WAAa,kCAAkC,aAAe,oC","sources":["components/PhonebookList/ContactsItem.jsx","components/PhonebookList/visibleContactsMap.js","components/PhonebookList/PhonebookList.jsx","webpack://react-homework-template/./src/components/PhonebookForm/PhonebookForm.module.scss?5840","components/PhonebookForm/PhonebookForm.jsx","webpack://react-homework-template/./src/pages/Home/Home.module.scss?ce6f","pages/Home/index.jsx","webpack://react-homework-template/./src/components/PhonebookList/PhonebookList.module.scss?ce93"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { deleteContactThunk } from 'store/contacts/contactsSlice';\n\nconst ContactsItem = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n  const deleteContact = () => dispatch(deleteContactThunk(id));\n\n  return (\n    <li>\n      <span>\n        {name}: {number}\n      </span>\n      <button onClick={deleteContact}>Delete</button>\n    </li>\n  );\n};\n\nexport default ContactsItem;\n","import ContactsItem from 'components/PhonebookList/ContactsItem';\n\nconst visibleContactsMap = (visibleContacts, recent = false) => {\n  if (recent && visibleContacts.length > 5) {\n    const sliceLength = visibleContacts.length - 5;\n    const recentContacts = visibleContacts.slice(sliceLength);\n    return recentContacts.map(contact => {\n      return <ContactsItem contact={contact} key={contact.id} />;\n    });\n  }\n  return visibleContacts.map(contact => {\n    return <ContactsItem contact={contact} key={contact.id} />;\n  });\n};\n\nexport default visibleContactsMap;\n","import { useSelector } from 'react-redux';\nimport {\n  selectErrorContacts,\n  selectFilter,\n  selectIsLoadingContacts,\n  selectVisibleContacts,\n} from 'store/selectors';\nimport styles from './PhonebookList.module.scss';\nimport visibleContactsMap from './visibleContactsMap';\n\nexport const PhonebookList = ({ recent = false }) => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoadingContacts);\n  const error = useSelector(selectErrorContacts);\n\n  return (\n    <>\n      {recent && !filter && <h2>Recent contacts</h2>}\n      <ul className={styles.contactsList}>\n        {isLoading ? (\n          <p>Loading...</p>\n        ) : error ? (\n          <p>{error}</p>\n        ) : visibleContacts.length ? (\n          filter ? (\n            visibleContactsMap(visibleContacts)\n          ) : (\n            visibleContactsMap(visibleContacts, recent)\n          )\n        ) : (\n          <p>No contacts yet.</p>\n        )}\n      </ul>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsForm\":\"PhonebookForm_contactsForm__1hcL0\"};","import { useDispatch } from 'react-redux';\nimport { addContactThunk } from 'store/contacts/contactsSlice';\nimport styles from './PhonebookForm.module.scss';\n\nconst PhonebookForm = () => {\n  const dispatch = useDispatch();\n\n  const createContact = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.name.value;\n    const number = form.number.value;\n\n    form.reset();\n\n    const newContact = {\n      name,\n      number,\n    };\n\n    dispatch(addContactThunk(newContact));\n  };\n\n  return (\n    <form className={styles.contactsForm} onSubmit={createContact}>\n      <label htmlFor=\"name\">Name</label>\n      <input type=\"text\" name=\"name\" id=\"name\" required autoComplete=\"name\" />\n      <label htmlFor=\"number\">Number</label>\n      <input type=\"tel\" name=\"number\" id=\"number\" required autoComplete=\"tel\" />\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nexport default PhonebookForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"homeContainer\":\"Home_homeContainer__Gr0Me\",\"formContainer\":\"Home_formContainer__HvDrM\",\"contactsContainer\":\"Home_contactsContainer__UeE3m\"};","import PhonebookForm from 'components/PhonebookForm/PhonebookForm';\nimport { PhonebookList } from 'components/PhonebookList/PhonebookList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFilterAction } from 'store/filter/filterSlice';\nimport styles from './Home.module.scss';\nimport { useEffect } from 'react';\nimport { getAllContactsThunk } from 'store/contacts/contactsSlice';\nimport { selectIsLoggedIn } from 'store/selectors';\n\nconst Home = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      dispatch(changeFilterAction(''));\n      dispatch(getAllContactsThunk());\n    }\n  }, [dispatch, isLoggedIn]);\n\n  return (\n    <div className={styles.homeContainer}>\n      <div className={styles.formContainer}>\n        <h2>Add Contact</h2>\n        <PhonebookForm />\n      </div>\n      <div className={styles.contactsContainer}>\n        <PhonebookList recent />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterForm\":\"PhonebookList_filterForm__LrWaI\",\"contactsList\":\"PhonebookList_contactsList__mkSCJ\"};"],"names":["_ref","contact","id","name","number","dispatch","useDispatch","_jsxs","children","_jsx","onClick","deleteContact","deleteContactThunk","visibleContacts","recent","arguments","length","undefined","sliceLength","slice","map","ContactsItem","PhonebookList","useSelector","selectVisibleContacts","filter","selectFilter","isLoading","selectIsLoadingContacts","error","selectErrorContacts","_Fragment","className","styles","visibleContactsMap","PhonebookForm","onSubmit","e","preventDefault","form","target","value","reset","newContact","addContactThunk","htmlFor","type","required","autoComplete","Home","isLoggedIn","selectIsLoggedIn","useEffect","changeFilterAction","getAllContactsThunk"],"sourceRoot":""}